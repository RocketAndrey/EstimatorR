@page
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@using NonFactors.Mvc.Grid;
@model Estimator.Pages.Price.IndexModel
@{
    ViewData["Title"] = "Прейскуранты";
}

<div class="row mb-3">
    <div class="col-8">
        <h3>Прейскуранты</h3>
    </div>
    <div class="col-4 text-right">
        @if (Model.isAdministrator)
        {
            <a asp-page="Edit" class="btn btn-outline-primary btn-sm">Создать</a>
        }
    </div>
</div>

<div class="row mb-3">
    <div class="col">

    <form method="post">
        @(
            Html.Grid(Model.PriceList).Build(columns =>
            {
                columns.Add().Encoded(false).RenderedAs(model => $"<a href='/Price/Edit/?id={model.PriceListId}'><svg class=\"bi\" width=\"16\" height=\"16\"><use href=\"#bi-pencil-square\"></use></svg></a>");
                columns.Add(model => model.Name).Titled("Наименование").Sortable(true);
                columns.Add(model => model.Manufacture.Name).Titled("Производитель").Sortable(true);
                columns.Add(model => model.DateStart.Date.ToShortDateString()).Titled("Дата введения").Sortable(true);
                columns.Add(model => model.DateEnd.Date.ToShortDateString()).Titled("Дата окончания").Sortable(true);
                columns.Add(model => model.Description).Titled("Описание").Sortable(false);
                //Edit
                @* columns.Add().Encoded(false).RenderedAs(model => $"<a href='/Price/Edit/?id={model.PriceListId}'><img src=\"/edit.png\"/></a>"); *@
                //Delete
                @* columns.Add().Encoded(false).RenderedAs(model => $"<a href='/Price/?id={model.PriceListId}'><img src=\"/delete.png\"/></a>"); *@
                //Import
                @* columns.Add().Encoded(false).RenderedAs(model => $"<a href='/Price/Import/?id={model.PriceListId}'>Импорт</a>"); *@
            })
            .Using(GridFilterMode.Header)
            .Empty("Нет данных")
            .Filterable(GridFilterType.Double)
            .Sortable()
            )
    </form>
   </div>

   </div>

    <script src="~/js/mvc-grid/mvc-grid.js"></script>
    <script>
        document.querySelectorAll(".mvc-grid").forEach(element => new MvcGrid(element));
    </script>
    <script>
        MvcGrid.lang = {
            default: {
                "equals": "Равно",
                "not-equals": "Не равно"
            },
            text: {
                "contains": "Содержит",
                "equals": "Равно",
                "not-equals": "Не равно",
                "starts-with": "Начинается с",
                "ends-with": "Заканчивается"
            },
            number: {
                "equals": "Равно",
                "not-equals": "Не равно",
                "less-than": "Меньше чем",
                "greater-than": "Больше чем",
                "less-than-or-equal": "Меньше или равно",
                "greater-than-o-requal": "Больше или равно"
            },
            guid: {
                "equals": "Равно",
                "not-equals": "Не равно",
            },
            filter: {
                "apply": "✓",
                "remove": "✘"
            },
            operator: {
                "select": "",
                "and": "et",
                "or": "ou"
            }
        };
    </script>
