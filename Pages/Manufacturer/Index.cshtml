@page
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@using NonFactors.Mvc.Grid;
@model Estimator.Pages.Manufacturer.IndexModel
@{
    ViewData["Title"] = "Производители ЭКБ";
}


<div class="row mb-3">
    <div class="col-10">
        <h3>Заводы изготовители</h3>
    </div>

    <div class="col-2 text-right">
        @if (Model.isAdministrator)
        {
            <div class="btn-group" role="group" aria-label="Button group with nested dropdown">
                <a  class="btn btn-outline-primary" asp-page="Edit" asp-route-id="0">Создать</a>
           
               @* //только для администратора *@
                <div class="btn-group" role="group">
                    <button type="button" class="btn btn-outline-primary dropdown-toggle" data-toggle="dropdown" aria-expanded="false" >
               
                    </button>
                    <div class="dropdown-menu">
                        <a class="dropdown-item" asp-page="Import">Импортировать список</a> 
                    </div>
                </div>
            
        </div> 
        }
    </div>
</div>


@if (Model.Message != null)
{
    <script type="text/javascript">

        var answer = window.confirm("@Model.Message"+"\nSave data?");
        if (answer) {
            window.location.href = "/Manufacturer";
        }
        else {
            //some code Можно сделать отмену импорта производителей
        }
    </script>

}
<div class="row mb-3">
    <div class="col">

        <form method="post">
            @(
                Html.Grid(Model.Companies).Build(columns =>

                {
                    columns.Add().Encoded(false).RenderedAs(model => $"<a href='/Manufacturer/Edit/{model.Id}'><svg class=\"bi\" width=\"16\" height=\"16\"><use href=\"#bi-pencil-square\"></use></svg></a>");

                    columns.Add(model => model.Code).Titled("Код").Sortable(true);
                    columns.Add(model => model.Name).Titled("Наименование").Sortable(true);
                    columns.Add(model => model.Note).Titled("Примечание").Sortable(false);

                    //Delete

                    @* columns.Add().Encoded(false).RenderedAs(model => $"<a href='/Manufacturer/?id={model.Id}'><svg class=\"bi\" width=\"16\" height=\"16\"><use href=\"#bi-trash\"></use></svg></a>"); *@
                })
                .Using(GridFilterMode.Header)
                .Empty("Нет данных")
                .Filterable(GridFilterType.Double)
                .Sortable()
                .Pageable(pager =>
                {
                    pager.PageSizes = new Dictionary<Int32, String> { { 0, "All" }, { 25, "25" }, { 50, "50" } , { 100, "100" }, { 250, "250" }, };
                    pager.ShowPageSizes = true;
                    pager.RowsPerPage = 50;
                })
                )
        </form>
        </div>
 </div>

    <script src="~/js/mvc-grid/mvc-grid.js"></script>
    <script>
        document.querySelectorAll(".mvc-grid").forEach(element => new MvcGrid(element));
    </script>
    <script>
        MvcGrid.lang = {
            default: {
                "equals": "Равно",
                "not-equals": "Не равно"
            },
            text: {
                "contains": "Содержит",
                "equals": "Равно",
                "not-equals": "Не равно",
                "starts-with": "Начинается с",
                "ends-with": "Заканчивается"
            },
            number: {
                "equals": "Равно",
                "not-equals": "Не равно",
                "less-than": "Меньше чем",
                "greater-than": "Больше чем",
                "less-than-or-equal": "Меньше или равно",
                "greater-than-o-requal": "Больше или равно"
            },
            guid: {
                "equals": "Равно",
                "not-equals": "Не равно",
            },
            filter: {
                "apply": "✓",
                "remove": "✘"
            },
            operator: {
                "select": "",
                "and": "et",
                "or": "ou"
            }
        };
 
    </script>


