@page

@model Estimator.Pages.CustomerRequests.ImportModel

@{
    ViewData["Title"] = "Импорт перечня ЭКБ для заявки из XLSX (эксель) файла";
}

<form method="post" enctype="multipart/form-data">
    <input type="hidden" asp-for="ElementImport.CustomerRequestID" />
    <input type="hidden" asp-for="ElementImport.ElementImportID" />
    <input type="hidden" asp-for="ElementImport.FileUploaded" />

        <div class="form-row">
            <div class="col">
                <nav aria-label="breadcrumb">
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item"><a href="./Index">Заявки</a></li>
                        <li class="breadcrumb-item "><a asp-page="./Edit" asp-route-id="@Model.ElementImport.CustomerRequestID">@Model.ElementImport.CustomerRequestID</a></li>
                        
                                <li class="breadcrumb-item active">
                                    <a asp-page="./Import" asp-route-id="@Model.ElementImport.CustomerRequestID">
                                        Импорт перечня
                                    </a>
                                </li>
                        <li class="breadcrumb-item">
                            <a asp-page="./Report" asp-route-id="@Model.ElementImport.CustomerRequestID">
                                Калькуляция
                            </a>
                        </li>
                    </ol>
                </nav>
            </div>
        </div>
      <div class="form-row">
        <div class="col">
          <h4>Заявка&nbsp;@Model.ElementImport.CustomerRequestID .&nbsp;Импорт перечня из XLSX (эксель) файла.</h4>
          </div>
        @*             <div class="col-md-auto">
                    <a asp-page="./Report" asp-route-id="@Model.ElementImport.CustomerRequestID" data-toggle="tooltip" data-placement="top" title="Калькуляция стоимости"><img src="~/contract2.png" width="32" height="32" /></a>
        </div>
        <div class="col-md-auto">
                    <a asp-page="./Edit" asp-route-id="@Model.ElementImport.CustomerRequestID" data-toggle="tooltip" data-placement="top" title="Редактирование заявки"><img src="~/Request.png" width="32" height="32" /></a>
        </div> *@
      </div>
    

       @*  <div class="form-row">
            <dl class="row">
                    <dt class="col-sm-4">
                        
                        @Html.DisplayNameFor(model => model.ElementImport.CustomerRequest.RequestNumber)
                    </dt>
                    <dd class="col-sm-8">
                        @Html.DisplayFor(model => model.ElementImport.CustomerRequest.RequestNumber)
                    </dd>
                    <dt class="col-sm-4">
                        @Html.DisplayNameFor(model => model.ElementImport.CustomerRequest.RequestDate)
                    </dt>
                    <dd class="col-sm-8">
                        @Html.DisplayFor(model => model.ElementImport.CustomerRequest.RequestDate)
                    </dd>
                    <dt class="col-sm-4">
                        @Html.DisplayNameFor(model => model.ElementImport.CustomerRequest.Description)
                    </dt>
                    <dd class="col-sm-8">
                        @Html.DisplayFor(model => model.ElementImport.CustomerRequest.Description)
                    </dd>
                    <dt class="col-sm-4">
                        @Html.DisplayNameFor(model => model.ElementImport.CustomerRequest.Program.Name)
                    </dt>
                    <dd class="col-sm-8">
                        @Html.DisplayFor(model => model.ElementImport.CustomerRequest.Program.Description)
                    </dd>
                    <dt class="col-sm-4">
                        @Html.DisplayNameFor(model => model.ElementImport.CustomerRequest.Customer.Name)
                    </dt>
                    <dd class="col-sm-8">
                        @Html.DisplayFor(model => model.ElementImport.CustomerRequest.Customer.Name)
                    </dd>
            </dl>

        </div> *@
    
        <div class="form-row">
            <div class="col">
                @if (Model.ErrorMessage.Length > 0)
                {
                    <div class="alert alert-danger" role="alert">
                        @Html.DisplayFor(model => model.ErrorMessage)
                     
                    </div>
                }
            </div>
        </div>
       
        <div class="form-row">
            <div class="col">
                <a  data-toggle="collapse" href="#collapseKeys" role="button" aria-expanded="false" aria-controls="collapseKeys">
                    Ключи
                </a>
                <br />
            </div>

        </div>   
        <div class="form-row">
                <div class="collapse" id="collapseKeys">
                    <div class="card card-body">
                        <table class="table table-borderless ">
                            @foreach (var item in Model?.ElementImport?.CustomerRequest?.Program?.ElementntTypes)
                            {
                        string keysstr = "";
                                <tr>
                                    <td><b>@item.Name </b></td>
                                    <td>
                                        @if (item.Keys != null)
                                        {
                                            

                                            @foreach (var itemK in item.Keys)
                                            {

                                        keysstr = keysstr == "" ? itemK.Key : keysstr + "; " + itemK.Key;
                                            }
                                        }
                                <p>@keysstr</p>
                                            
                                        

                                    </td>
                                </tr>

                            }
                        </table>
                    </div>
                </div>


        </div>
        <div class="row">
            <hr />
        </div>
        <div class="form-row">

            <div class="col">
                <div class="custom-control custom-switch">
                    <input type="checkbox" asp-for="@Model.ElementImport.UseLastCalculation" class="custom-control-input" id="customSwitch1">
                    <label class="custom-control-label" for="customSwitch1">Искать элементы в предыдущих расчётов</label>
                </div>
            </div>
        
        </div>
        <div class="row">
            <hr />
        </div>
            <div class="form-row">
                <div class="col">
                    @if (Model.ElementImport.FileUploaded)
                    {
                        <a href="@Model.ElementImport.FileWWWPath"><img src="~/xlsx.png" width="32" height="32" /></a>
                    }

                </div>
           
            
                    <div class="col-md-auto">
                        <div class="btn-group" role="group" aria-label="Basic example">
                    @if(Model.ImportStep != 1)
                        {
                        <a asp-page="import" class="btn btn-outline-primary" asp-route-id="@Model.ElementImport.CustomerRequestID" asp-route-step="1">Загрузить файл</a>
                        <input type="submit" value="Сохранить" class="btn btn-outline-primary " asp-route-step="2" />
                    }
                    else
                    {
                        <input type="submit" value="Загрузить файл" class="btn btn-outline-primary " asp-route-step="1" />

                    }
                    
                    
     
                        </div>
                    </div>
            
                </div>

        <div class="form-row" id="collapseUpload">
            
            @if (Model.ImportStep == 1)
            {
                <div class="col">

                    <table class="table table-borderless">

                        <tr>
                            <td colspan="7">
                                <input type="file" name="uploadedFile" accept="*.xslx" class="form-control" />
                            </td>

                        </tr>
                        <tr>

                        <td colspan="7">
                            <div class="custom-control custom-switch">
                                <input type="checkbox" asp-for="@Model.ElementImport.GroupSameTypes" class="custom-control-input" id="customSwitch2">
                                <label class="custom-control-label" for="customSwitch2">Группировать повторяющиеся типы</label>
                            </div>
                            </td>
                        </tr>

                        <tr>

                            <td colspan="7">
                                
                            </td>
                        </tr>

                        <tr>
                            <td colspan="4" class="align-content-center">
                                <div class="input-group">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text">Начальная строка</span>

                                    </div>
                                    <input asp-for="@Model.ElementImport.FirstRowNumber" class="form-control" />

                                </div>
                            </td>
                            <td colspan="3">
                                <div class="input-group">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text">Конечная строка</span>
                                        <div class="input-group-text">
                                            <input asp-for="@Model.ElementImport.UseLastRowNumber" onclick="EnableDisableTextBox('lastRowNumberSelector',this);" />
                                        </div>
                                    </div>
                                    @{
                                        

                                        if (Model.ElementImport.UseLastRowNumber)
                                        {
                                            <input id="lastRowNumberSelector" asp-for="@Model.ElementImport.LastRowNumber" class="form-control" />

                                        }
                                        else
                                        {
                                            <input id="lastRowNumberSelector" asp-for="@Model.ElementImport.LastRowNumber" class="form-control" disabled= />

                                        }
                                    }


                                </div>
                            </td>
                        </tr>

                        <tr>
                            <td colspan="7">
                                <div class="input-group">
                                    <div class="input-group-prepend">
                                        <div class="input-group-text">
                                            @Html.DisplayNameFor(model => model.ElementImport.ElementNameColumn)
                                        </div>
                                    </div>
                                    <select asp-for="ElementImport.ElementNameColumn" asp-items="Html.GetEnumSelectList<Estimator.Models.ColumnNames>()" class="form-control"></select>
                                </div>
                            </td>
                        </tr>

                        <tr>
                            <td colspan="7">
                                <div class="input-group">
                                    <div class="input-group-prepend">
                                        <div class="input-group-text">
                                            @Html.DisplayNameFor(model => model.ElementImport.ElementTypeKeyColumn)
                                        </div>
                                    </div>
                                    <select asp-for="ElementImport.ElementTypeKeyColumn" asp-items="Html.GetEnumSelectList<Estimator.Models.ColumnNames>()" class="form-control"></select>
                                </div>
                            </td>
                        </tr>

                        <tr>
                            <td colspan="7">
                                <div class="input-group">
                                    <div class="input-group-prepend">

                                        <div class="input-group-text">
                                            @Html.DisplayNameFor(model => model.ElementImport.ElementCountColumn)
                                        </div>
                                    </div>
                                    <select asp-for="ElementImport.ElementCountColumn" asp-items="Html.GetEnumSelectList<Estimator.Models.ColumnNames>()" class="form-control"></select>
                                </div>
                            </td>
                        </tr>
                        @* цена элементов *@
                        <tr>
                            <td colspan="7">

                                <div class="input-group">
                                    <div class="input-group-prepend">
                                        <div class="input-group-text">

                                            <input type="checkbox" asp-for="@Model.ElementImport.ImportElementPrice" onclick="EnableDisableTextBox('ElementPriceColumnSelector',this);" />

                                        </div>

                                        <span class="input-group-text">
                                            @Html.DisplayNameFor(model => model.ElementImport.ElementPriceColumn)
                                        </span>


                                    </div>
                                    @{
                                        
                                        if (Model.ElementImport.ImportElementPrice)
                                        {
                                            <select asp-for="ElementImport.ElementPriceColumn" id="ElementPriceColumnSelector" asp-items="Html.GetEnumSelectList<Estimator.Models.ColumnNames>()" class="form-control">
                                            </select>
                                        }
                                        else
                                        {
                                            <select disabled asp-for="ElementImport.ElementPriceColumn" id="ElementPriceColumnSelector" asp-items="Html.GetEnumSelectList<Estimator.Models.ColumnNames>()" class="form-control">
                                            </select>
                                        }
                                    }

                                </div>
                            </td>

                        </tr>
                        @* срок поставки*@
                        <tr>
                            <td colspan="7">

                                <div class="input-group">
                                    <div class="input-group-prepend">
                                        <div class="input-group-text">

                                            <input type="checkbox" asp-for="@Model.ElementImport.ImportDeliveryTime" onclick="EnableDisableTextBox('DeliveryTimeColumnSelector',this);" />

                                        </div>

                                        <span class="input-group-text">
                                            @Html.DisplayNameFor(model => model.ElementImport.DeliveryTimeColumn)
                                        </span>


                                    </div>
                                    @{

                                        if (Model.ElementImport.ImportDeliveryTime)
                                        {
                                            <select asp-for="ElementImport.DeliveryTimeColumn" id="DeliveryTimeColumnSelector" asp-items="Html.GetEnumSelectList<Estimator.Models.ColumnNames>()" class="form-control">
                                            </select>
                                        }
                                        else
                                        {
                                            <select disabled asp-for="ElementImport.DeliveryTimeColumn" id="DeliveryTimeColumnSelector" asp-items="Html.GetEnumSelectList<Estimator.Models.ColumnNames>()" class="form-control">
                                            </select>
                                        }
                                    }

                                </div>
                            </td>

                        </tr>
                        <tr>
                            <td colspan="7">
                                <div class="input-group">
                                    <div class="input-group-prepend">
                                        <div class="input-group-text">

                                            <input type="checkbox" asp-for="@Model.ElementImport.ImportElementКitPrice" onclick="EnableDisableTextBox('ElementKitPriceColumnSelector',this);" />

                                        </div>

                                        <span class="input-group-text">
                                            @Html.DisplayNameFor(model => model.ElementImport.ElementKitPriceColumn)
                                        </span>

                                    </div>

                                    @{

                                        if (Model.ElementImport.ImportElementКitPrice)
                                        {
                                            <select asp-for="ElementImport.ElementKitPriceColumn" id="ElementKitPriceColumnSelector" asp-items="Html.GetEnumSelectList<Estimator.Models.ColumnNames>()" class="form-control">
                                            </select>
                                        }
                                        else
                                        {
                                            <select disabled asp-for="ElementImport.ElementKitPriceColumn" id="ElementKitPriceColumnSelector" asp-items="Html.GetEnumSelectList<Estimator.Models.ColumnNames>()" class="form-control">
                                            </select>
                                        }
                                    }


                                </div>

                            </td>
                        </tr>
                        <tr>
                            <td colspan="7">
                                <div class="input-group">
                                    <div class="input-group-prepend">
                                        <div class="input-group-text">

                                            <input type="checkbox" asp-for="@Model.ElementImport.ImportElementContractorPrice" onclick="EnableDisableTextBox('ElementContractorPriceColumnSelector',this);" onload="EnableDisableTextBox('ElementContractorPriceColumnSelector',this);" />

                                        </div>

                                        <span class="input-group-text">
                                            @Html.DisplayNameFor(model => model.ElementImport.ElementContractorPriceColumn)
                                        </span>

                                    </div>
                                    @{
                                       

                                        if (Model.ElementImport.ImportElementContractorPrice)
                                        {
                                            <select asp-for="ElementImport.ElementContractorPriceColumn" id="ElementContractorPriceColumnSelector" asp-items="Html.GetEnumSelectList<Estimator.Models.ColumnNames>()" class="form-control">
                                            </select>
                                        }
                                        else
                                        {
                                            <select disabled asp-for="ElementImport.ElementContractorPriceColumn" id="ElementContractorPriceColumnSelector" asp-items="Html.GetEnumSelectList<Estimator.Models.ColumnNames>()" class="form-control">
                                            </select>
                                        }
                                    }



                                </div>
                            </td>
                        </tr>

                    </table>
                
            </div>
            }
            
        </div>
        
    
     <div div class="form-row">
         <div class="col">
            @if (Model.ElementImport.Valid)
            {
                <h4>Результат анализа:</h4>
                <br />
                <table class="table table-bordered">


                    <tr>
                        <th><b>@Html.DisplayNameFor(model => model.ElementImport.CustomerRequest.RequestElementTypes.ToList()[0].ElementType.Name)</b></th>
                        <th><b>@Html.DisplayNameFor(model => model.ElementImport.CustomerRequest.RequestElementTypes.ToList()[0].BatchCount)</b></th>
                        <th><b>@Html.DisplayNameFor(model => model.ElementImport.CustomerRequest.RequestElementTypes.ToList()[0].ItemCount)</b></th>
                        <th><b>@Html.DisplayNameFor(model => model.ElementImport.CustomerRequest.RequestElementTypes.ToList()[0].KitCount)</b></th>
                    </tr>
                    <tbody>
                            @if (Model?.ElementImport?.CustomerRequest?.RequestElementTypes!=null )
                            {
                        @foreach (var item in Model?.ElementImport?.CustomerRequest?.RequestElementTypes)
                        {
                            @if (item.BatchCount > 0)
                            {
                                <tr>
                                    <td>
                                        @item.ElementType.Name
                                    </td>
                                    <td>
                                        @item.BatchCount
                                    </td>
                                    <td>
                                        @item.ItemCount
                                    </td>
                                    <td>
                                        @item.KitCount
                                    </td>
                                </tr>
                            }

                        }
                        }
                    </tbody>
                    <tfoot>

                        <tr>
                            <td><b>Итого:</b></td>
                            <td>
                                <b>
                                    @Model.ElementImport.CustomerRequest.TotalBanchCount
                                </b>
                            </td>
                            <td>
                                <b>
                                    @Model.ElementImport.CustomerRequest.TotalItemCount
                                </b>
                            </td>
                            <td>
                                <b>
                                    @Model.ElementImport.CustomerRequest.TotalKitCount
                                </b>

                            </td>
                        </tr>
                    </tfoot>
                </table>
            }
         </div>
     </div>

         
    <div div class="form-row">
        <div class="col">
            @if (Model?.ElementImport?.XLSXElementTypes?.Count >0 )
            {
                <br />
                <h4>Загруженный перечень:</h4>
                <br />
                <table class="table table-bordered">
                    <tr>

                        <td><b>№</b></td>
                        <td> <b>@Html.DisplayNameFor(model => model.ElementImport.ElementNameColumn) (@Model.ElementImport.ElementNameColumn)</b> </td>
                        <td><b>@Html.DisplayNameFor(model => model.ElementImport.ElementTypeKeyColumn) (@Model.ElementImport.ElementTypeKeyColumn)</b></td>
                        <td><b>@Html.DisplayNameFor(model => model.ElementImport.ElementCountColumn) (@Model.ElementImport.ElementCountColumn)</b></td>
                            @if (Model.ElementImport.ImportElementPrice)
                            {
                                <td><b>@Html.DisplayNameFor(model => model.ElementImport.ElementPriceColumn) (@Model.ElementImport.ElementPriceColumn)</b></td>
                            
                            }
                            @if (Model.ElementImport.ImportElementКitPrice)
                            {
                                <td><b>@Html.DisplayNameFor(model => model.ElementImport.ElementKitPriceColumn) (@Model.ElementImport.ElementKitPriceColumn)</b></td>
                            }
                               @if (Model.ElementImport.ImportElementContractorPrice)
                            {
                                <td><b>@Html.DisplayNameFor(model => model.ElementImport.ElementContractorPriceColumn) (@Model.ElementImport.ElementContractorPriceColumn)</b></td>
                            }
                            @if(Model.ElementImport.ImportDeliveryTime)
                            {
                                <td><b>@Html.DisplayNameFor(model => model.ElementImport.DeliveryTimeColumn) (@Model.ElementImport.DeliveryTimeColumn)</b></td>
                            }
                        </tr>

                    @if (Model.ElementImport.XLSXElementTypes != null)
                    {
                        @for (int i = 0; i < Model.ElementImport.XLSXElementTypes.Count; i++)
                        {
                            string selectedRow = Model.ElementImport.XLSXElementTypes[i].Valid ? (Model.ElementImport.XLSXElementTypes[i].BeforeUploadedXLSXElementTypeID > 0 ? "table-warning" : "") : "table-danger";

                            <tr class="@selectedRow">
                                <td>
                                        <div class="form-group form-check">

                                     <input type ="checkbox" asp-for="@Model.ElementImport.XLSXElementTypes[i].InList" class="form-check-input" id="ElementImport.XLSXElementTypes[@i].InList" onclick="showSelected('ElementImport.XLSXElementTypes[@i].ElementImportID');" />
                                        <label class="form-check-label" for="ElementImport.XLSXElementTypes[@i].InList"> @Model.ElementImport.XLSXElementTypes[i].RowNum </label>
                                     </div> 
                                    <input type="hidden" asp-for="@Model.ElementImport.XLSXElementTypes[i].ID" id="ElementImport.XLSXElementTypes[@i].ID" />
                                </td>
                                <td>
                                    <input asp-for="@Model.ElementImport.XLSXElementTypes[i].ElementName" id="ElementImport.XLSXElementTypes[@i].ElementName" class="form-control" />
                                    <span class="text-info">@Model.ElementImport.XLSXElementTypes[i].AsuProtokolCode</span>
                                    <span class="text-danger">@Model.ElementImport.XLSXElementTypes[i].ErrorMessage</span>

                                </td>

                                <td>
                                    <input asp-for="@Model.ElementImport.XLSXElementTypes[i].ElementTypeKey" id="ElementImport.XLSXElementTypes[@i].ElementTypeKey" class="form-control" />
                                </td>

                                <td>
                                    <input asp-for="@Model.ElementImport.XLSXElementTypes[i].ElementCount" id="ElementImport.XLSXElementTypes[@i].ElementCount" class="form-control" />

                                </td>
                                    @if (Model.ElementImport.ImportElementPrice)
                                    {
                                    <td>
                                    @Model.ElementImport.XLSXElementTypes[i].ElementPrice.ToString("N2")
                                
                                     </td>
                                    }
                                    @if (Model.ElementImport.ImportElementКitPrice)
                                    {
                                      <td> @Model.ElementImport.XLSXElementTypes[i].ElementKitPrice.ToString("N2")</td>
                                    }
                                    @if (Model.ElementImport.ImportElementContractorPrice)
                                    {
                                <td>@Model.ElementImport.XLSXElementTypes[i].ElementContractorPrice.ToString("N2")</td>
                                    }
                                    @if (Model.ElementImport.ImportDeliveryTime)
                                    {
                                        <td>@Model.ElementImport.XLSXElementTypes[i].DeliveryTime</td>
                                    }
                            </tr>
                        }

                    }
                </table>
            }
        </div>
    </div>
     <div div class="form-row">
        <div class="col">

        </div>
    </div>

     <div div class="form-row">
        <div class="col">

        </div>
    </div>
    <div div class="form-row">
        <div class="col">
        </div>
    </div>
<br />

  
</form>



@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
   

}

<script>
    function viewDIV(n) {
        style = document.getElementById(n).style;
        style.display = (style.display == 'block') ? 'none' : 'block';
    }

    function showSelected(n) {
        var item = document.getElementById(n);
        if (item.classList.contains('table-danger')) {
            item.classList.remove('table-danger');
        }
        else {
            item.classList.add('table-danger');
        }
    }
        function EnableDisableTextBox(control, chk) {
            var txt = document.getElementById(control);
            txt.disabled = chk.checked ? false : true;
            if (!txt.disabled) {
                txt.focus();
            }
        }
       
</script>

