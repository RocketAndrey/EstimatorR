@page
@using NonFactors.Mvc.Grid
@model Estimator.Pages.RuChips.IndexModel
@{
    ViewData["Title"] = "ЭКБ отечественного производства";
}

<center><h1>Cправочник ЭКБ ОП</h1></center>

<td align="right">
    <a asp-page="Import" class="btn btn-outline-primary btn-sm">Импортировать список</a>
</td>

<br />

<hr />

@if (Model.Message != null)
{
    <script type="text/javascript">

        var answer = window.confirm("@Model.Message" + "\nSave data?");
        if (answer) {
            window.location.href = "/RuChips";
        }
        else {
            //some code Можно сделать отмену импорта производителей
        }
    </script>

}

<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Index</title>
    <link href="~/css/mvc-grid/mvc-grid.css" rel="stylesheet" />
</head>

<body>
    <form method="post">
        @(
            Html.Grid(Model.DirVniir).Build(columns =>
            {
                //Edit
                columns.Add().Encoded(false).RenderedAs(model => $"<a href='/RuChips/Edit/{model.Id}'><img src=\"/edit.png\"/></a>");

                //columns.Add(model => model.Group).Titled("Группа").Sortable(true);
                //columns.Add(model => model.Subgroup).Titled("Подгруппа").Sortable(true);

                columns.Add(model => model.Name).Titled("Наименование").Sortable(true);

                columns.Add(model => model.Manufacturer).Titled("Завод изготовитель").Sortable(true);

                columns.Add().Encoded(false).RenderedAs(model => $"<a href='/Manufacturer?Code-equals={model.CodeManufacturer}'><img src=\"/inf.png\"/></a>");
                //columns.Add().Titled("Код").Encoded(false).RenderedAs(model => $"<a href='/Manufacturer?Code-equals={model.CodeManufacturer}'>{model.CodeManufacturer}</a>");
                
                //columns.Add().Titled("Завод изготовитель").Sortable(true).Filterable(true).Encoded(false).RenderedAs(model => $"<a href='/Manufacturer?Name-contains={model.Manufacturer}'>{model.Manufacturer}</a>");
                //columns.Add(model => model.CodeManufacturer).Titled("Код изготовителя").Sortable(true);

                columns.Add(model => model.QLevel).Titled("Уровень качества").Sortable(true);
                columns.Add(model => model.Description).Titled("Описание").Sortable(true);
                columns.Add(model => model.TechCondition).Titled("ТУ").Sortable(true);
                //Delete
                columns.Add().Encoded(false).RenderedAs(model => $"<a href='/RuChips/?id={model.Id}'><img src=\"/delete.png\"/></a>");
            })
            .Using(GridFilterMode.Header)
            .Empty("No data found")
            .Filterable(GridFilterType.Double)
            .Sortable()
            .Pageable(pager =>
            {
                pager.PageSizes = new Dictionary<Int32, String> { { 0, "All" }, { 10, "10" }, { 50, "50" }, { 100, "100" }, { 1000, "1000" } };
                pager.ShowPageSizes = true;
                pager.RowsPerPage = 5;
            })
            )
    </form>
    <script src="~/js/mvc-grid/mvc-grid.js"></script>
    <script>
        document.querySelectorAll(".mvc-grid").forEach(element => new MvcGrid(element));
    </script>
    <script>
        MvcGrid.lang = {
            default: {
                "equals": "Равно",
                "not-equals": "Не равно"
            },
            text: {
                "contains": "Содержит",
                "equals": "Равно",
                "not-equals": "Не равно",
                "starts-with": "Начинается с",
                "ends-with": "Заканчивается"
            },
            number: {
                "equals": "Равно",
                "not-equals": "Не равно",
                "less-than": "Меньше чем",
                "greater-than": "Больше чем",
                "less-than-or-equal": "Меньше или равно",
                "greater-than-o-requal": "Больше или равно"
            },
            guid: {
                "equals": "Равно",
                "not-equals": "Не равно",
            },
            filter: {
                "apply": "✓",
                "remove": "✘"
            },
            operator: {
                "select": "",
                "and": "et",
                "or": "ou"
            }
        };
    </script>
</body>

</html>